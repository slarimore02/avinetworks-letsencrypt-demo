- name: lookup uuid of newly created virtualservice 1
  avi_api_session:
    avi_credentials:
        username: "{{ avi_controller_username }}"
        password: "{{ avi_controller_password }}"
        api_version: "{{ avi_api_version }}"
    controller: "{{ ctrl }}"
    http_method: get
    path: virtualservice
    tenant: "{{ tenant_name }}"
    params:
      { name: "{{ ApplicationName }}-vs" }
  register: vs
- debug: var=vs
- name: lookup vsvip of newly created virtualservice 1
  avi_api_session:
    avi_credentials:
        username: "{{ avi_controller_username }}"
        password: "{{ avi_controller_password }}"
        api_version: "{{ avi_api_version }}"
    controller: "{{ ctrl }}"
    http_method: get
    path: vsvip
    tenant: "{{ tenant_name }}"
    params:
      { name: "{{ ApplicationName }}-vsvip" }
  register: vsvip
- debug: var=vsvip

- name: lookup cluster uuid
  avi_api_session:
    avi_credentials:
        username: "{{ avi_controller_username }}"
        password: "{{ avi_controller_password }}"
        api_version: "{{ avi_api_version }}"
    controller: "{{ ctrl }}"
    http_method: get
    path: cluster
    tenant: "admin"
  register: clusteruuid_aws

- name: Set GSLB Pool member IP when Public
  set_fact:
    pool_member_ip: "{{ vsvip['obj']['results'][0]['vip'][0]['floating_ip']['addr'] }}"
  when: gslb_ips == "Public"

- name: Set GSLB Pool member IP when Public
  set_fact:
    pool_member_ip: "{{ vsvip['obj']['results'][0]['vip'][0]['ip_address']['addr'] }}"
  when: gslb_ips == "Private"

- name: Create gslbservice
  avi_gslbservice:
    avi_credentials:
        username: "{{ avi_controller_username }}"
        password: "{{ avi_controller_password }}"
        api_version: "{{ avi_api_version }}"
        controller: "{{ ctrl }}"
    name: "{{ ApplicationName }}-gslbservice"
    domain_names:
    - "{{ ApplicationName }}.{{ clouds[env].gslb_domain }}"
    down_response: 
      type: GSLB_SERVICE_DOWN_RESPONSE_NONE
    groups:
    - members:
      - cluster_uuid: "{{ clusteruuid_aws.obj.uuid }}"
        ip:
          addr: "{{ pool_member_ip }}"
          type: V4
        vs_uuid: "{{ vs['obj']['results'][0]['uuid'] }}"
      name: "{{ ApplicationName }}-pool"
      priority: 9
    # health_monitor_refs:
    #   - /api/healthmonitor?name=System-GSLB-Ping
    controller_health_status_enabled: true
    pool_algorithm: GSLB_SERVICE_ALGORITHM_PRIORITY
    enabled: true
    is_federated: true
    tenant: "{{ tenant_name }}"